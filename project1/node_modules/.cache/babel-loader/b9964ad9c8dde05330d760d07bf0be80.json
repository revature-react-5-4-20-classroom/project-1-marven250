{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaRvE\\\\Desktop\\\\RevatureTraining\\\\project-1-marven250\\\\project1\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport About from \"./Components/About\";\nimport Header from \"./Components/Header\";\nimport Reimbursements from \"./Components/Reimbursements\";\nimport Home from \"./Components/Home\";\nimport history from \"./history\";\nimport SingleReimbursement from \"./Components/singleReimbursement\";\nimport { getCurrentUserReimbursements, getAllUsers } from \"./api/infoClient\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUser = async user => {\n      console.log(\"this is our updated user:\", user);\n      await sessionStorage.setItem(\"user\", JSON.stringify(user));\n      this.setState({\n        loggedInUser: user\n      });\n\n      if (this.myUser().role === \"finance-manager\") {\n        const allUsers = await getAllUsers();\n        this.setState({\n          allUsers: allUsers\n        }); //console.log(\"This is all users fo manager: \", allUsers);\n      }\n\n      history.push(\"/home\"); // history.push(\"/home\");\n    };\n\n    this.updateReimbursements = async () => {\n      try {\n        const newCurrentReimbursements = await getCurrentUserReimbursements();\n        console.log(\"these are new reimbursementssss\", newCurrentReimbursements);\n        this.setState({\n          cUserReimbursements: newCurrentReimbursements\n        });\n        history.push(\"/home\");\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n\n    this.updatePage = () => {\n      // console.log(\"//////////\", this.props.history);\n      console.log(\"attempting to logout\");\n      sessionStorage.clear();\n      this.setState({\n        loggedInUser: null,\n        toDashboard: true\n      });\n    };\n\n    this.myUser = () => {\n      let user = this.state.loggedInUser;\n      return user;\n    };\n\n    this.state = {\n      loggedInUser: null,\n      toDashboard: false,\n      cUserReimbursements: [],\n      allUsers: [],\n      allReimbursements: []\n    };\n  }\n\n  render() {\n    //console.log(\"these are reimbursements:\", this.state.cUserReimbursements);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Redirect, {\n      from: \"*\",\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      updateReimbursements: this.updateReimbursements,\n      updatePage: this.updatePage,\n      user: this.myUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/singleReimbursements\",\n      render: props => /*#__PURE__*/React.createElement(SingleReimbursement, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        currentReimbursements: this.state.cUserReimbursements,\n        user: this.myUser,\n        allUsers: this.state.allUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      render: props => /*#__PURE__*/React.createElement(About, Object.assign({}, props, {\n        updateUser: this.updateUser,\n        user: this.myUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reimbursements\",\n      render: props => /*#__PURE__*/React.createElement(Reimbursements, Object.assign({}, props, {\n        updateReimbursements: this.updateReimbursements,\n        user: this.myUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        user: this.myUser,\n        updateUser: this.updateUser,\n        updateReimbursements: this.updateReimbursements,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }))); // return (\n    //   <>\n    //     <Route\n    //       render={(props) => (\n    //         <Login {...props} user={this.myUser} updateUser={this.updateUser} />\n    //       )}\n    //     />\n    //   </>\n    // );\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/MaRvE/Desktop/RevatureTraining/project-1-marven250/project1/src/App.tsx"],"names":["React","Route","Switch","Redirect","Login","About","Header","Reimbursements","Home","history","SingleReimbursement","getCurrentUserReimbursements","getAllUsers","App","Component","constructor","props","updateUser","user","console","log","sessionStorage","setItem","JSON","stringify","setState","loggedInUser","myUser","role","allUsers","push","updateReimbursements","newCurrentReimbursements","cUserReimbursements","e","error","message","updatePage","clear","toDashboard","state","allReimbursements","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport About from \"./Components/About\";\nimport Header from \"./Components/Header\";\nimport Reimbursements from \"./Components/Reimbursements\";\nimport Home from \"./Components/Home\";\nimport history from \"./history\";\nimport SingleReimbursement from \"./Components/singleReimbursement\";\nimport { getCurrentUserReimbursements, getAllUsers } from \"./api/infoClient\";\n\nexport class App extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      toDashboard: false,\n      cUserReimbursements: [],\n      allUsers: [],\n      allReimbursements: [],\n    };\n  }\n\n  updateUser = async (user: any) => {\n    console.log(\"this is our updated user:\", user);\n    await sessionStorage.setItem(\"user\", JSON.stringify(user));\n    this.setState({\n      loggedInUser: user,\n    });\n    if (this.myUser().role === \"finance-manager\") {\n      const allUsers = await getAllUsers();\n      this.setState({ allUsers: allUsers });\n      //console.log(\"This is all users fo manager: \", allUsers);\n    }\n\n    history.push(\"/home\");\n    // history.push(\"/home\");\n  };\n\n  updateReimbursements = async () => {\n    try {\n      const newCurrentReimbursements = await getCurrentUserReimbursements();\n      console.log(\"these are new reimbursementssss\", newCurrentReimbursements);\n      this.setState({\n        cUserReimbursements: newCurrentReimbursements,\n      });\n      history.push(\"/home\");\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n\n  updatePage = () => {\n    // console.log(\"//////////\", this.props.history);\n    console.log(\"attempting to logout\");\n    sessionStorage.clear();\n    this.setState({ loggedInUser: null, toDashboard: true });\n  };\n\n  myUser = () => {\n    let user = this.state.loggedInUser;\n    return user;\n  };\n\n  render() {\n    //console.log(\"these are reimbursements:\", this.state.cUserReimbursements);\n    return (\n      <>\n        <Redirect from=\"*\" to=\"/home\" />\n        <Header\n          updateReimbursements={this.updateReimbursements}\n          updatePage={this.updatePage}\n          user={this.myUser}\n        />\n        <Switch>\n          <Route\n            path=\"/singleReimbursements\"\n            render={(props) => <SingleReimbursement {...props} />}\n          />\n          <Route\n            path=\"/home\"\n            render={(props) => (\n              <Home\n                {...props}\n                currentReimbursements={this.state.cUserReimbursements}\n                user={this.myUser}\n                allUsers={this.state.allUsers}\n              />\n            )}\n          />\n          <Route\n            path=\"/about\"\n            render={(props) => (\n              <About\n                {...props}\n                updateUser={this.updateUser}\n                user={this.myUser}\n              />\n            )}\n          />\n          <Route\n            path=\"/reimbursements\"\n            render={(props) => (\n              <Reimbursements\n                {...props}\n                updateReimbursements={this.updateReimbursements}\n                user={this.myUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <Login\n                {...props}\n                user={this.myUser}\n                updateUser={this.updateUser}\n                updateReimbursements={this.updateReimbursements}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n\n    // return (\n    //   <>\n    //     <Route\n    //       render={(props) => (\n    //         <Login {...props} user={this.myUser} updateUser={this.updateUser} />\n    //       )}\n    //     />\n    //   </>\n    // );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}